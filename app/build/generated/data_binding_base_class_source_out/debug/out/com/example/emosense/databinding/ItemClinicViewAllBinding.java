// Generated by view binder compiler. Do not edit!
package com.example.emosense.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.emosense.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemClinicViewAllBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout addressContainer;

  @NonNull
  public final LinearLayout cityContainer;

  @NonNull
  public final TextView cityProvince;

  @NonNull
  public final TextView clinicAddress;

  @NonNull
  public final TextView clinicName;

  @NonNull
  public final TextView clinicPhone;

  @NonNull
  public final LinearLayout detailsContainer;

  @NonNull
  public final ImageButton expandButton;

  @NonNull
  public final ImageView ivClinic;

  @NonNull
  public final LinearLayout phoneContainer;

  @NonNull
  public final CardView photoCard;

  @NonNull
  public final ImageButton showLessButton;

  @NonNull
  public final TextView suburbProvinceCity;

  private ItemClinicViewAllBinding(@NonNull CardView rootView,
      @NonNull LinearLayout addressContainer, @NonNull LinearLayout cityContainer,
      @NonNull TextView cityProvince, @NonNull TextView clinicAddress, @NonNull TextView clinicName,
      @NonNull TextView clinicPhone, @NonNull LinearLayout detailsContainer,
      @NonNull ImageButton expandButton, @NonNull ImageView ivClinic,
      @NonNull LinearLayout phoneContainer, @NonNull CardView photoCard,
      @NonNull ImageButton showLessButton, @NonNull TextView suburbProvinceCity) {
    this.rootView = rootView;
    this.addressContainer = addressContainer;
    this.cityContainer = cityContainer;
    this.cityProvince = cityProvince;
    this.clinicAddress = clinicAddress;
    this.clinicName = clinicName;
    this.clinicPhone = clinicPhone;
    this.detailsContainer = detailsContainer;
    this.expandButton = expandButton;
    this.ivClinic = ivClinic;
    this.phoneContainer = phoneContainer;
    this.photoCard = photoCard;
    this.showLessButton = showLessButton;
    this.suburbProvinceCity = suburbProvinceCity;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemClinicViewAllBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemClinicViewAllBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_clinic_view_all, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemClinicViewAllBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressContainer;
      LinearLayout addressContainer = ViewBindings.findChildViewById(rootView, id);
      if (addressContainer == null) {
        break missingId;
      }

      id = R.id.cityContainer;
      LinearLayout cityContainer = ViewBindings.findChildViewById(rootView, id);
      if (cityContainer == null) {
        break missingId;
      }

      id = R.id.cityProvince;
      TextView cityProvince = ViewBindings.findChildViewById(rootView, id);
      if (cityProvince == null) {
        break missingId;
      }

      id = R.id.clinicAddress;
      TextView clinicAddress = ViewBindings.findChildViewById(rootView, id);
      if (clinicAddress == null) {
        break missingId;
      }

      id = R.id.clinicName;
      TextView clinicName = ViewBindings.findChildViewById(rootView, id);
      if (clinicName == null) {
        break missingId;
      }

      id = R.id.clinicPhone;
      TextView clinicPhone = ViewBindings.findChildViewById(rootView, id);
      if (clinicPhone == null) {
        break missingId;
      }

      id = R.id.detailsContainer;
      LinearLayout detailsContainer = ViewBindings.findChildViewById(rootView, id);
      if (detailsContainer == null) {
        break missingId;
      }

      id = R.id.expandButton;
      ImageButton expandButton = ViewBindings.findChildViewById(rootView, id);
      if (expandButton == null) {
        break missingId;
      }

      id = R.id.ivClinic;
      ImageView ivClinic = ViewBindings.findChildViewById(rootView, id);
      if (ivClinic == null) {
        break missingId;
      }

      id = R.id.phoneContainer;
      LinearLayout phoneContainer = ViewBindings.findChildViewById(rootView, id);
      if (phoneContainer == null) {
        break missingId;
      }

      id = R.id.photoCard;
      CardView photoCard = ViewBindings.findChildViewById(rootView, id);
      if (photoCard == null) {
        break missingId;
      }

      id = R.id.showLessButton;
      ImageButton showLessButton = ViewBindings.findChildViewById(rootView, id);
      if (showLessButton == null) {
        break missingId;
      }

      id = R.id.suburbProvinceCity;
      TextView suburbProvinceCity = ViewBindings.findChildViewById(rootView, id);
      if (suburbProvinceCity == null) {
        break missingId;
      }

      return new ItemClinicViewAllBinding((CardView) rootView, addressContainer, cityContainer,
          cityProvince, clinicAddress, clinicName, clinicPhone, detailsContainer, expandButton,
          ivClinic, phoneContainer, photoCard, showLessButton, suburbProvinceCity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
